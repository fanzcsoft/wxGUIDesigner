<?xml version="1.0" encoding="UTF-8"?>
<!--
    Name:        webview.xml
    Purpose:     wxWebView class definition
    Author:      Andrea Zanellato
    Modified by: 
    Created:     2012/01/21
    Revision:    $Hash$
    Copyleft:    (É”) Andrea Zanellato
    Licence:     GNU General Public License Version 3
-->
<class name="wxWebView">
    <description>
        &lt;p&gt;This control may be used to render web (HTML / CSS / javascript) documents. &lt;/p&gt;
        &lt;p&gt;It is designed to allow the creation of multiple backends for each port, although currently just one is available. It differs from &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_html_window.html" title="wxHtmlWindow is probably the only class you will directly use unless you want to do something special..."&gt;wxHtmlWindow&lt;/a&gt; in that each backend is actually a full rendering engine, Trident on MSW and Webkit on OSX and GTK. This allows the correct viewing complex pages with javascript and css.&lt;/p&gt;
        &lt;h2&gt;&lt;a class="anchor" id="descriptions"&gt;&lt;/a&gt;
        Backend Descriptions&lt;/h2&gt;
        &lt;dl class="user"&gt;&lt;dt&gt;&lt;b&gt;wxWEB_VIEW_BACKEND_IE (MSW)&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;/dd&gt;&lt;/dl&gt;
        &lt;p&gt;The IE backend uses Microsoft's Trident rendering engine, specifically the version used by the locally installed copy of Internet Explorer. As such it is only available for the MSW port. By default recent versions of the &lt;a href="http://msdn.microsoft.com/en-us/library/aa752085%28v=VS.85%29.aspx"&gt;WebBrowser&lt;/a&gt; control, which this backend uses, emulate Internet Explorer 7. This can be changed with a registry setting, see &lt;a href="http://msdn.microsoft.com/en-us/library/ee330730%28v=vs.85%29.aspx#browser_emulation"&gt;this&lt;/a&gt; article for more information. This backend has full support for custom schemes and virtual file systems.&lt;/p&gt;
        &lt;dl class="user"&gt;&lt;dt&gt;&lt;b&gt;wxWEB_VIEW_WEBKIT (GTK)&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;/dd&gt;&lt;/dl&gt;
        &lt;p&gt;Under GTK the WebKit backend uses &lt;a href="http://webkitgtk.org/"&gt;WebKitGTK+&lt;/a&gt;. The current minimum version required is 1.3.1 which ships by default with Ubuntu Natty and Debian Wheezy and has the package name libwebkitgtk-dev. Custom schemes and virtual files systems are supported under this backend, however embedded resources such as images and stylesheets are currently loaded using the data:// scheme.&lt;/p&gt;
        &lt;dl class="user"&gt;&lt;dt&gt;&lt;b&gt;wxWEB_VIEW_WEBKIT (OSX)&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;&lt;/dd&gt;&lt;/dl&gt;
        &lt;p&gt;The OSX WebKit backend uses Apple's &lt;a href="http://developer.apple.com/library/mac/#documentation/Cocoa/Reference/WebKit/Classes/WebView_Class/Reference/Reference.html#//apple_ref/doc/uid/20001903"&gt;WebView&lt;/a&gt; class. This backend has full support for custom schemes and virtual file systems.&lt;/p&gt;
        &lt;h2&gt;&lt;a class="anchor" id="async"&gt;&lt;/a&gt;
        Asynchronous Notifications&lt;/h2&gt;
        &lt;p&gt;Many of the methods in &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_web_view.html" title="This control may be used to render web (HTML / CSS / javascript) documents."&gt;wxWebView&lt;/a&gt; are asynchronous, i.e. they return immediately and perform their work in the background. This includes functions such as LoadUrl() and &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_web_view.html#ac978367671b6bbb06b35d8cbf2ed56ac" title="Reload the currently displayed URL."&gt;Reload()&lt;/a&gt;. To receive notification of the progress and completion of these functions you need to handle the events that are provided. Specifically &lt;code&gt;wxEVT_COMMAND_WEB_VIEW_LOADED&lt;/code&gt; notifies when the page or a sub-frame has finished loading and &lt;code&gt;wxEVT_COMMAND_WEB_VIEW_ERROR&lt;/code&gt; notifies that an error has occurred.&lt;/p&gt;
        &lt;h2&gt;&lt;a class="anchor" id="vfs"&gt;&lt;/a&gt;
        Virtual File Systems and Custom Schemes&lt;/h2&gt;
        &lt;p&gt;&lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_web_view.html" title="This control may be used to render web (HTML / CSS / javascript) documents."&gt;wxWebView&lt;/a&gt; supports the registering of custom scheme handlers, for example &lt;code&gt;file&lt;/code&gt; or &lt;code&gt;http&lt;/code&gt;. To do this create a new class which inherits from &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_web_view_handler.html" title="The base class for handling custom schemes in wxWebView, for example to allow virtual file system sup..."&gt;wxWebViewHandler&lt;/a&gt;, where wxWebHandler::GetFile() returns a pointer to a &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_f_s_file.html" title="This class represents a single file opened by wxFileSystem."&gt;wxFSFile&lt;/a&gt; which represents the given url. You can then register your handler with &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_web_view.html#a7f97f428ac96426dd84bfd1b7406dbc2" title="Registers a custom scheme handler."&gt;RegisterHandler()&lt;/a&gt; it will be called for all pages and resources.&lt;/p&gt;
        &lt;p&gt;wxWebFileHandler is provided to allow the navigation of pages inside a zip archive. It overrides the &lt;code&gt;file&lt;/code&gt; scheme and provides support for the standard &lt;code&gt;file&lt;/code&gt; syntax as well as paths to archives of the form &lt;code&gt;&lt;a href="file:///C:/example/docs.zip;protocol=zip/main.htm"&gt;file:///C:/example/docs.zip;protocol=zip/main.htm&lt;/a&gt;
    </description>
    <inherits>
        <class>wxControl</class>
    </inherits>
    <name label="Name">
        <value>webView</value>
    </name>
    <enum name="backend" label="Backend">
        <flag name="wxWEB_VIEW_BACKEND_IE">
            <description>The IE backend uses Microsoft's Trident rendering engine, specifically the version used by the locally installed copy of Internet Explorer. As such it is only available for the MSW port. By default recent versions of the &lt;a href="http://msdn.microsoft.com/en-us/library/aa752085%28v=VS.85%29.aspx"&gt;WebBrowser&lt;/a&gt; control, which this backend uses, emulate Internet Explorer 7. This can be changed with a registry setting, see &lt;a href="http://msdn.microsoft.com/en-us/library/ee330730%28v=vs.85%29.aspx#browser_emulation"&gt;this&lt;/a&gt; article for more information. This backend has full support for custom schemes and virtual file systems.</description>
        </flag>
        <flag name="wxWEB_VIEW_WEBKIT_GTK">
            <description>Under GTK the WebKit backend uses &lt;a href="http://webkitgtk.org/"&gt;WebKitGTK+&lt;/a&gt;. The current minimum version required is 1.3.1 which ships by default with Ubuntu Natty and Debian Wheezy and has the package name libwebkitgtk-dev. Custom schemes and virtual files systems are supported under this backend, however embedded resources such as images and stylesheets are currently loaded using the data:// scheme.</description>
        </flag>
        <flag name="wxWEB_VIEW_WEBKIT_OSX">
            <description>The OSX WebKit backend uses Apple's &lt;a href="http://developer.apple.com/library/mac/#documentation/Cocoa/Reference/WebKit/Classes/WebView_Class/Reference/Reference.html#//apple_ref/doc/uid/20001903"&gt;WebView&lt;/a&gt; class. This backend has full support for custom schemes and virtual file systems.</description>
        </flag>
    </enum>
    <event name="wxWebViewEvent">
        <description>A navigation event holds information about events associated with wxWebView objects.</description>
        <type name="wxEVT_COMMAND_WEB_VIEW_NAVIGATING">
            <macro_id>EVT_WEB_VIEW_NAVIGATING</macro_id>
            <description>Generated before trying to get a resource. This event may be vetoed to prevent navigating to this resource. Note that if the displayed HTML document has several frames, one such event will be generated per frame.</description>
        </type>
        <type name="wxEVT_COMMAND_WEB_VIEW_NAVIGATED">
            <macro_id>EVT_WEB_VIEW_NAVIGATED</macro_id>
            <description>Generated after it was confirmed that a resource would be requested. This event may not be vetoed. Note that if the displayed HTML document has several frames, one such event will be generated per frame.</description>
        </type>
        <type name="wxEVT_COMMAND_WEB_VIEW_LOADED">
            <macro_id>EVT_WEB_VIEW_LOADED</macro_id>
            <description>Generated when the document is fully loaded and displayed. Note that if the displayed HTML document has several frames, one such event will be generated per frame.</description>
        </type>
        <type name="wxEVT_COMMAND_WEB_VIEW_ERROR">
            <macro_id>EVT_WEB_VIEW_ERROR</macro_id>
            <description>Generated when a navigation error occurs. The integer associated with this event will be a wxWebNavigationError item. The string associated with this event may contain a backend-specific more precise error message/code.</description>
        </type>
        <type name="wxEVT_COMMAND_WEB_VIEW_NEWWINDOW">
            <macro_id>EVT_WEB_VIEW_NEWWINDOW</macro_id>
            <description>Generated when a new window is created. You must handle this event if you want anything to happen, for example to load the page in a new window or tab.</description>
        </type>
        <type name="wxEVT_COMMAND_WEB_VIEW_TITLE_CHANGED">
            <macro_id>EVT_WEB_VIEW_TITLE_CHANGED</macro_id>
            <description>Generated when the page title changes. Use GetString to get the title.</description>
        </type>
    </event>
</class>