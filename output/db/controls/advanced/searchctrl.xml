<?xml version="1.0" encoding="UTF-8"?>
<!--
    Name:        srchctrl.xml
    Purpose:     wxSearchCtrl class definition
    Author:      Andrea Zanellato
    Modified by: 
    Created:     2011/12/02
    Revision:    $Hash$
    Licence:     wxWindows licence
-->
<class name="wxSearchCtrl">
    <inherits>
        <class>wxTextCtrl</class>
    </inherits>
    <name>m_srchCtrl</name>
    <style>
        <flag name="wxTE_PROCESS_ENTER">
            <description>The control will generate the event wxEVT_COMMAND_TEXT_ENTER (otherwise pressing Enter key is either processed internally by the control or used for navigation between dialog controls).</description>
        </flag>
        <flag name="wxTE_PROCESS_TAB">
            <description>The control will receive wxEVT_CHAR events for TAB pressed - normally, TAB is used for passing to the next control in a dialog instead. For the control created with this style, you can still use Ctrl-Enter to pass to the next control from the keyboard.</description>
        </flag>
        <flag name="wxTE_NOHIDESEL">
            <description>By default, the Windows text control doesn't show the selection when it doesn't have focus - use this style to force it to always show it. It doesn't do anything under other platforms.</description>
        </flag>
        <flag name="wxTE_LEFT">
            <description>The text in the control will be left-justified (default).</description>
        </flag>
        <flag name="wxTE_CENTRE">
            <description>The text in the control will be centered (currently wxMSW and wxGTK2 only).</description>
        </flag>
        <flag name="wxTE_RIGHT">
            <description>The text in the control will be right-justified (currently wxMSW and wxGTK2 only).</description>
        </flag>
        <flag name="wxTE_CAPITALIZE">
            <description>On PocketPC and Smartphone, causes the first letter to be capitalized.</description>
        </flag>
    </style>
    <text name="value">
        <description>Initial value of the control (default: empty).</description>
    </text>
    <event name="wxCommandEvent">
        <type name="EVT_SEARCHCTRL_SEARCH_BTN">
            <description>Respond to a wxEVT_SEARCHCTRL_SEARCH_BTN event, generated when the search button is clicked. Note that this does not initiate a search on its own, you need to perform the appropriate action in your event handler. You may use event.GetString() to retrieve the string to search for in the event handler code.</description>
        </type>
        <type name="EVT_SEARCHCTRL_CANCEL_BTN">
            <description>Respond to a wxEVT_SEARCHCTRL_CANCEL_BTN event, generated when the cancel button is clicked.</description>
        </type>
    </event>
</class>