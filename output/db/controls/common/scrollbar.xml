<?xml version="1.0" encoding="UTF-8"?>
<!--
    Name:        scrollbar.xml
    Purpose:     wxScrollBar class definition
    Author:      Andrea Zanellato
    Modified by: 
    Created:     2012/01/15
    Revision:    $Hash$
    Copyleft:    (É”) Andrea Zanellato
    Licence:     GNU General Public License Version 3
-->
<class name="wxScrollBar">
    <description>
        &lt;p&gt;A &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_scroll_bar.html" title="A wxScrollBar is a control that represents a horizontal or vertical scrollbar."&gt;wxScrollBar&lt;/a&gt; is a control that represents a horizontal or vertical scrollbar. &lt;/p&gt;
        &lt;p&gt;It is distinct from the two scrollbars that some windows provide automatically, but the two types of scrollbar share the way events are received.&lt;/p&gt;
        &lt;dl class="remark"&gt;&lt;dt&gt;&lt;b&gt;Remarks:&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;A scrollbar has the following main attributes: range, thumb size, page size, and position. The range is the total number of units associated with the view represented by the scrollbar. For a table with 15 columns, the range would be 15. The thumb size is the number of units that are currently visible. For the table example, the window might be sized so that only 5 columns are currently visible, in which case the application would set the thumb size to 5. When the thumb size becomes the same as or greater than the range, the scrollbar will be automatically hidden on most platforms. The page size is the number of units that the scrollbar should scroll by, when 'paging' through the data. This value is normally the same as the thumb size length, because it is natural to assume that the visible window size defines a page. The scrollbar position is the current thumb position. Most applications will find it convenient to provide a function called AdjustScrollbars() which can be called initially, from an OnSize event handler, and whenever the application data changes in size. It will adjust the view, object and page size according to the size of the window and the size of the data.&lt;/dd&gt;&lt;/dl&gt;    </description>
    <inherits>
        <class>wxControl</class>
    </inherits>
    <name label="Name">
        <value>scrollBar</value>
    </name>
    <style label="Style">
        <flag name="wxSB_HORIZONTAL">
            <description>Specifies a horizontal scrollbar.</description>
        </flag>
        <flag name="wxSB_VERTICAL">
            <description>Specifies a vertical scrollbar.</description>
        </flag>
    </style>
    <int name="value" label="Value">
        <description>Initial position of the scrollbar (default: 0).</description>
    </int>
    <int name="range" label="Range">
        <description>Maximum value of the gauge (default: 10).</description>
    </int>
    <int name="thumbsize" label="Thumb size">
        <description>Size of the thumb (default: 1).</description>
    </int>
    <int name="pagesize" label="Page size">
        <description>Page size (default: 1).</description>
    </int>
    <event name="wxScrollEvent">
        <macros>
            <macro>EVT_SCROLL</macro>
            <macro>ID,EVT_COMMAND_SCROLL</macro>
            <description>Process all scroll events.</description>
        </macros>
        <type name="wxEVT_SCROLL_TOP">
            <macros>
                <macro>EVT_SCROLL_TOP</macro>
                <macro>ID,EVT_COMMAND_SCROLL_TOP</macro>
            </macros>
            <description>Process wxEVT_SCROLL_TOP scroll-to-top events (minimum position).</description>
        </type>
        <type name="wxEVT_SCROLL_BOTTOM">
            <macros>
                <macro>EVT_SCROLL_BOTTOM</macro>
                <macro>ID,EVT_COMMAND_SCROLL_BOTTOM</macro>
            </macros>
            <description>Process wxEVT_SCROLL_BOTTOM scroll-to-bottom events (maximum position).</description>
        </type>
        <type name="wxEVT_SCROLL_LINEUP">
            <macros>
                <macro>EVT_SCROLL_LINEUP</macro>
                <macro>ID,EVT_COMMAND_SCROLL_LINEUP</macro>
            </macros>
            <description>Process wxEVT_SCROLL_LINEUP line up events.</description>
        </type>
        <type name="wxEVT_SCROLL_LINEDOWN">
            <macros>
                <macro>EVT_SCROLL_LINEDOWN</macro>
                <macro>ID,EVT_COMMAND_SCROLL_LINEDOWN</macro>
            </macros>
            <description>Process wxEVT_SCROLL_LINEDOWN line down events.</description>
        </type>
        <type name="wxEVT_SCROLL_PAGEUP">
            <macros>
                <macro>EVT_SCROLL_PAGEUP</macro>
                <macro>ID,EVT_COMMAND_SCROLL_PAGEUP</macro>
            </macros>
            <description>Process wxEVT_SCROLL_PAGEUP page up events.</description>
        </type>
        <type name="wxEVT_SCROLL_PAGEDOWN">
            <macros>
                <macro>EVT_SCROLL_PAGEDOWN</macro>
                <macro>ID,EVT_COMMAND_SCROLL_PAGEDOWN</macro>
            </macros>
            <description>Process wxEVT_SCROLL_PAGEDOWN page down events.</description>
        </type>
        <type name="wxEVT_SCROLL_THUMBTRACK">
            <macros>
                <macro>EVT_SCROLL_THUMBTRACK</macro>
                <macro>ID,EVT_COMMAND_SCROLL_THUMBTRACK</macro>
            </macros>
            <description>Process wxEVT_SCROLL_THUMBTRACK thumbtrack events (frequent events sent as the user drags the thumbtrack).</description>
        </type>
        <type name="wxEVT_SCROLL_THUMBRELEASE">
            <macros>
                <macro>EVT_SCROLL_THUMBRELEASE</macro>
                <macro>ID,EVT_COMMAND_SCROLL_THUMBRELEASE</macro>
            </macros>
            <description>Process wxEVT_SCROLL_THUMBRELEASE thumb release events.</description>
        </type>
        <type name="wxEVT_SCROLL_CHANGED">
            <macros>
                <macro>EVT_SCROLL_CHANGED</macro>
                <macro>ID,EVT_COMMAND_SCROLL_CHANGED</macro>
            </macros>
            <description>Process wxEVT_SCROLL_CHANGED end of scrolling events (MSW only).</description>
        </type>
    </event>
</class>