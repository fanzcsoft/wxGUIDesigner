<?xml version="1.0" encoding="UTF-8"?>
<!--
    Name:        button.xml
    Purpose:     wxButton class definition
    Author:      Andrea Zanellato
    Modified by: 
    Created:     2012/01/14
    Revision:    $Hash$
    Copyleft:    (É”) Andrea Zanellato
    Licence:     GNU General Public License Version 3
-->
<class name="wxButton">
    <description>
        &lt;p&gt;A button is a control that contains a text string, and is one of the most common elements of a GUI. &lt;/p&gt;
        &lt;p&gt;It may be placed on a &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_dialog.html"&gt;dialog box&lt;/a&gt; or on a &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_panel.html"&gt;wxPanel&lt;/a&gt; panel, or indeed on almost any other window.&lt;/p&gt;
        &lt;p&gt;By default, i.e. if none of the alignment styles are specified, the label is centered both horizontally and vertically. If the button has both a label and a bitmap, the alignment styles above specify the location of the rectangle combining both the label and the bitmap and the bitmap position set with &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_any_button.html#a841c7747f78ea37110338b0ce1aa97dd" title="Set the position at which the bitmap is displayed."&gt;wxButton::SetBitmapPosition()&lt;/a&gt; defines the relative position of the bitmap with respect to the label (however currently non-default alignment combinations are not implemented on all platforms).&lt;/p&gt;
        &lt;p&gt;Since version 2.9.1 &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_button.html" title="A button is a control that contains a text string, and is one of the most common elements of a GUI..."&gt;wxButton&lt;/a&gt; supports showing both text and an image (currently only when using wxMSW, wxGTK or wxOSX/Cocoa ports), see &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_any_button.html#a9d4e6eb774aa5d19b6f75c48439d3685" title="Sets the bitmap to display in the button."&gt;SetBitmap()&lt;/a&gt; and &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_any_button.html#a1efdfd1f222acca40aacad1fe5f8eb17" title="Sets the bitmap label for the button."&gt;SetBitmapLabel()&lt;/a&gt;, &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_any_button.html#a735a45850008e87e1198db36fcbee0db" title="Sets the bitmap for the disabled button appearance."&gt;SetBitmapDisabled()&lt;/a&gt; &amp;c methods. In the previous wxWidgets versions this functionality was only available in (the now trivial) &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_bitmap_button.html" title="A bitmap button is a control that contains a bitmap."&gt;wxBitmapButton&lt;/a&gt; class which was only capable of showing an image without text.&lt;/p&gt;
        &lt;p&gt;A button may have either a single image for all states or different images for the following states (different images are not currently supported under OS X where the normal image is used for all states): &lt;/p&gt;
        &lt;ul&gt;
        &lt;li&gt;&lt;b&gt;normal:&lt;/b&gt; the default state &lt;/li&gt;
        &lt;li&gt;&lt;b&gt;disabled:&lt;/b&gt; bitmap shown when the button is disabled. &lt;/li&gt;
        &lt;li&gt;&lt;b&gt;pressed:&lt;/b&gt; bitmap shown when the button is pushed (e.g. while the user keeps the mouse button pressed on it) &lt;/li&gt;
        &lt;li&gt;&lt;b&gt;focus:&lt;/b&gt; bitmap shown when the button has keyboard focus (but is not pressed as in this case the button is in the pressed state) &lt;/li&gt;
        &lt;li&gt;&lt;b&gt;current:&lt;/b&gt; bitmap shown when the mouse is over the button (but it is not pressed although it may have focus). Notice that if current bitmap is not specified but the current platform UI uses hover images for the buttons (such as Windows XP or GTK+), then the focus bitmap is used for hover state as well. This makes it possible to set focus bitmap only to get reasonably good behaviour on all platforms.&lt;/li&gt;
        &lt;/ul&gt;
        &lt;p&gt;All of the bitmaps must be of the same size and the normal bitmap must be set first (to a valid bitmap), before setting any other ones. Also, if the size of the bitmaps is changed later, you need to change the size of the normal bitmap before setting any other bitmaps with the new size (and you do need to reset all of them as their original values can be lost when the normal bitmap size changes).&lt;/p&gt;
        &lt;p&gt;The position of the image inside the button be configured using &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_any_button.html#a841c7747f78ea37110338b0ce1aa97dd" title="Set the position at which the bitmap is displayed."&gt;SetBitmapPosition()&lt;/a&gt;. By default the image is on the left of the text.&lt;/p&gt;
        &lt;p&gt;Please also notice that GTK+ uses a global setting called &lt;code&gt;gtk-button-images&lt;/code&gt; to determine if the images should be shown in the buttons at all. If it is off (which is the case in e.g. Gnome 2.28 by default), no images will be shown, consistently with the native behaviour.&lt;/p&gt;
    </description>
    <inherits>
        <class>wxAnyButton</class>
    </inherits>
    <name label="Name">
        <value>button</value>
    </name>
    <style name="bitmapposition" label="Bitmap position">
        <description>Position of the bitmap in the button, see wxButton::SetBitmapPosition().</description>
        <flag name="wxTOP"/>
        <flag name="wxBOTTOM"/>
        <flag name="wxLEFT"/>
        <flag name="wxRIGHT"/>
    </style>
    <bool name="default" label="Default">
        <description>Should this button be the default button in dialog (default: 0)?</description>
    </bool>
    <bitmap label="Bitmap">
        <description>Bitmap to show on the button (required).</description>
    </bitmap>
    <event name="wxCommandEvent">
        <type name="wxEVT_COMMAND_BUTTON_CLICKED">
            <description>Process a wxEVT_COMMAND_BUTTON_CLICKED event, when the button is clicked.</description>
        </type>
    </event>
</class>