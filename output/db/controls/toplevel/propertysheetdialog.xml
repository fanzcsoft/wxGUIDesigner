<?xml version="1.0" encoding="UTF-8"?>
<!--
    Name:        propertysheetdialog.xml
    Purpose:     wxPropertySheetDialog class definition
    Author:      Andrea Zanellato
    Modified by: 
    Created:     2012/01/15
    Revision:    $Hash$
    Copyleft:    (É”) Andrea Zanellato
    Licence:     GNU General Public License Version 3
-->
<classes>
    <class name="wxPropertySheetDialog" type="toplevel">
        <description>
            &lt;p&gt;This class represents a property sheet dialog: a tabbed dialog for showing settings. &lt;/p&gt;
            &lt;p&gt;It is optimized to show flat tabs on PocketPC devices, and can be customized to use different controllers instead of the default notebook style.&lt;/p&gt;
            &lt;p&gt;To use this class, call &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_property_sheet_dialog.html#ad96015ab13fc1e2c364660fafd4121e0" title="Call this from your own Create function, before adding buttons and pages."&gt;Create()&lt;/a&gt; from your own Create function. Then call &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_property_sheet_dialog.html#a74a83482c1a6aa508bcd8240e0461ac9" title="Call this to create the buttons for the dialog."&gt;CreateButtons()&lt;/a&gt;, and create pages, adding them to the book control. Finally call &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_property_sheet_dialog.html#a9a15ba6b238d9ef84eb1882108ae72c6" title="Call this to lay out the dialog."&gt;LayoutDialog()&lt;/a&gt;.&lt;/p&gt;
            &lt;p&gt;For example:&lt;/p&gt;
            &lt;div class="fragment"&gt;&lt;pre class="fragment"&gt;    &lt;span class="keywordtype"&gt;bool&lt;/span&gt; &lt;a class="code" href="http://docs.wxwidgets.org/trunk/classwx_property_sheet_dialog.html#ad96015ab13fc1e2c364660fafd4121e0" title="Call this from your own Create function, before adding buttons and pages."&gt;MyPropertySheetDialog::Create&lt;/a&gt;(...)
                {
                    &lt;span class="keywordflow"&gt;if&lt;/span&gt; (!&lt;a class="code" href="http://docs.wxwidgets.org/trunk/classwx_property_sheet_dialog.html#ad96015ab13fc1e2c364660fafd4121e0" title="Call this from your own Create function, before adding buttons and pages."&gt;wxPropertySheetDialog::Create&lt;/a&gt;(...))
                        &lt;span class="keywordflow"&gt;return&lt;/span&gt; &lt;span class="keyword"&gt;false&lt;/span&gt;;

                    &lt;a class="code" href="http://docs.wxwidgets.org/trunk/classwx_property_sheet_dialog.html#a74a83482c1a6aa508bcd8240e0461ac9" title="Call this to create the buttons for the dialog."&gt;CreateButtons&lt;/a&gt;(&lt;a class="code" href="http://docs.wxwidgets.org/trunk/defs_8h.html#a9c40266b61a27f0124a69a699753889a"&gt;wxOK&lt;/a&gt;|&lt;a class="code" href="http://docs.wxwidgets.org/trunk/defs_8h.html#a5580412e224117ac127aacaafd49dc2e"&gt;wxCANCEL&lt;/a&gt;|&lt;a class="code" href="http://docs.wxwidgets.org/trunk/defs_8h.html#a111c2b7b06972d742f4708983337825a"&gt;wxHELP&lt;/a&gt;);

                    &lt;span class="comment"&gt;// Add page&lt;/span&gt;
                    &lt;a class="code" href="http://docs.wxwidgets.org/trunk/classwx_panel.html" title="A panel is a window on which controls are placed."&gt;wxPanel&lt;/a&gt;* panel = &lt;span class="keyword"&gt;new&lt;/span&gt; &lt;a class="code" href="http://docs.wxwidgets.org/trunk/classwx_panel.html" title="A panel is a window on which controls are placed."&gt;wxPanel&lt;/a&gt;(&lt;a class="code" href="http://docs.wxwidgets.org/trunk/classwx_property_sheet_dialog.html#af569c97e00fb9994f7ebaddcc9f32445" title="Returns the book control that will contain your settings pages."&gt;GetBookCtrl&lt;/a&gt;(), ...);
                    &lt;a class="code" href="http://docs.wxwidgets.org/trunk/classwx_property_sheet_dialog.html#af569c97e00fb9994f7ebaddcc9f32445" title="Returns the book control that will contain your settings pages."&gt;GetBookCtrl&lt;/a&gt;()-&gt;&lt;a class="code" href="http://docs.wxwidgets.org/trunk/classwx_book_ctrl_base.html#ab47f8935c3705a452fce7d292d8181dd" title="Adds a new page."&gt;AddPage&lt;/a&gt;(panel, &lt;span class="stringliteral"&gt;"General"&lt;/span&gt;);

                    &lt;a class="code" href="http://docs.wxwidgets.org/trunk/classwx_property_sheet_dialog.html#a9a15ba6b238d9ef84eb1882108ae72c6" title="Call this to lay out the dialog."&gt;LayoutDialog&lt;/a&gt;();
                    &lt;span class="keywordflow"&gt;return&lt;/span&gt; &lt;span class="keyword"&gt;true&lt;/span&gt;;
                }
            &lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If necessary, override &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_property_sheet_dialog.html#aab79a662b92281d1f64c606c253ed9b9" title="Override this if you wish to create a different kind of book control; by default, the value passed to..."&gt;CreateBookCtrl()&lt;/a&gt; and &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_property_sheet_dialog.html#a7827bb55364f6daa75fca9775cc0e6a8" title="Override this if you wish to add the book control in a way different from the standard way (for examp..."&gt;AddBookCtrl()&lt;/a&gt; to create and add a different kind of book control. You will then need to use two-step construction for the dialog or change the style of the book control by calling &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_property_sheet_dialog.html#acdfd10705dfdc4517150e5e9e70b9f9a" title="You can customize the look and feel of the dialog by setting the sheet style."&gt;SetSheetStyle()&lt;/a&gt; before calling &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_property_sheet_dialog.html#ad96015ab13fc1e2c364660fafd4121e0" title="Call this from your own Create function, before adding buttons and pages."&gt;Create()&lt;/a&gt;.&lt;/p&gt;
            &lt;p&gt;The &lt;a class="el" href="page_samples.html#page_samples_dialogs"&gt;Dialogs Sample&lt;/a&gt; shows this class being used with notebook and toolbook controllers (for Windows-style and Mac-style settings dialogs).&lt;/p&gt;
            &lt;p&gt;To make pages of the dialog scroll when the display is too small to fit the whole dialog, you can switch layout adaptation on globally with &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_dialog.html#a016cfd686f75bcfc5f7b6f127be74c7c" title="A static function enabling or disabling layout adaptation for all dialogs."&gt;wxDialog::EnableLayoutAdaptation()&lt;/a&gt; or per dialog with &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_dialog.html#a9f949c545ca70571cec8cd2fcbfc0991" title="Sets the adaptation mode, overriding the global adaptation flag."&gt;wxDialog::SetLayoutAdaptationMode()&lt;/a&gt;.&lt;/p&gt;
            &lt;p&gt;For more about layout adaptation, see &lt;a class="el" href="http://docs.wxwidgets.org/trunk/overview_dialog.html#overview_dialog_autoscrolling"&gt;Automatic scrolling dialogs&lt;/a&gt;.&lt;/p&gt;
        </description>
        <inherits>
            <class>wxDialog</class>
        </inherits>
        <children>
            <class>propertysheetpage</class>
        </children>
        <name label="Name">
            <value>m_propDlg</value>
        </name>
        <style name="buttons" label="Buttons">
            <description>Buttons to show, combination of flags accepted by wxPropertySheetDialog::CreateButtons() (default: 0).</description>
            <flag name="wxOK"/>
            <flag name="wxCANCEL"/>
        </style>
    </class>

    <class name="propertysheetpage" type="item">
        <text name="label" label="Label">
            <value>page</value>
            <description>Sheet page's title (required).</description>
        </text>
        <bitmap label="Bitmap">
            <description>Bitmap shown alongside the label (default: none).</description>
        </bitmap>
        <bool name="selected" label="Selected">
            <description>Is the page selected initially (only one page can be selected; default: 0)?</description>
        </bool>
    </class>
</classes>