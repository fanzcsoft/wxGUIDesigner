<?xml version="1.0" encoding="UTF-8"?>
<!--
    Name:        frame.xml
    Purpose:     wxFrame class definition
    Author:      Andrea Zanellato
    Modified by: 
    Created:     2011/12/02
    Revision:    $Hash$
    Copyleft:    (É”) Andrea Zanellato
    Licence:     GNU General Public License Version 3
-->
<class name="wxFrame" type="toplevel">
    <description>
        &lt;p&gt;A frame is a window whose size and position can (usually) be changed by the user. &lt;/p&gt;
        &lt;p&gt;It usually has thick borders and a title bar, and can optionally contain a menu bar, toolbar and status bar. A frame can contain any window that is not a frame or dialog.&lt;/p&gt;
        &lt;p&gt;A frame that has a status bar and toolbar, created via the &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_frame.html#aaa5134dcecc1ec77386465a327dd0a21" title="Creates a status bar at the bottom of the frame."&gt;CreateStatusBar()&lt;/a&gt; and &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_frame.html#a529698edc2fd2037ac8578dadafad0e2" title="Creates a toolbar at the top or left of the frame."&gt;CreateToolBar()&lt;/a&gt; functions, manages these windows and adjusts the value returned by &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_window.html#ae56fc53268b815b58570f66bfc33838f" title="Returns the size of the window 'client area' in pixels."&gt;GetClientSize()&lt;/a&gt; to reflect the remaining size available to application windows.&lt;/p&gt;
        &lt;dl class="remark"&gt;&lt;dt&gt;&lt;b&gt;Remarks:&lt;/b&gt;&lt;/dt&gt;&lt;dd&gt;An application should normally define an &lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_close_event.html" title="This event class contains information about window and session close events."&gt;wxCloseEvent&lt;/a&gt; handler for the frame to respond to system close events, for example so that related data and subwindows can be cleaned up.&lt;/dd&gt;&lt;/dl&gt;
        &lt;h2&gt;&lt;a class="anchor" id="frame_defaultevent"&gt;&lt;/a&gt;
        Default event processing&lt;/h2&gt;
        &lt;p&gt;&lt;a class="el" href="http://docs.wxwidgets.org/trunk/classwx_frame.html" title="A frame is a window whose size and position can (usually) be changed by the user."&gt;wxFrame&lt;/a&gt; processes the following events:&lt;/p&gt;
        &lt;ul&gt;
        &lt;li&gt;&lt;code&gt;wxEVT_SIZE:&lt;/code&gt; if the frame has exactly one child window, not counting the status and toolbar, this child is resized to take the entire frame client area. If two or more windows are present, they should be laid out explicitly either by manually handling &lt;code&gt;wxEVT_SIZE&lt;/code&gt; or using sizers; &lt;/li&gt;
        &lt;li&gt;&lt;code&gt;wxEVT_MENU_HIGHLIGHT:&lt;/code&gt; the default implementation displays the help string associated with the selected item in the first pane of the status bar, if there is one.&lt;/li&gt;
        &lt;/ul&gt;
    </description>
    <inherits>
        <class>wxTopLevelWindow</class>
    </inherits>
    <children>
        <option max="1">wxSizer</option>
        <option max="1">wxAuiManager</option>
        <option>wxControl</option>
        <class max="1">wxMenuBar</class>
        <class max="1">wxStatusBar</class>
        <class max="1">wxToolBar</class>
    </children>
    <name label="Name">
        <value>frame</value>
    </name>
    <style label="Style">
        <flag name="wxDEFAULT_FRAME_STYLE">
            <description>Defined as wxMINIMIZE_BOX | wxMAXIMIZE_BOX | wxRESIZE_BORDER | wxSYSTEM_MENU | wxCAPTION | wxCLOSE_BOX | wxCLIP_CHILDREN.</description>
        </flag>
        <flag name="wxICONIZE">
            <description>Display the frame iconized (minimized). Windows only.</description>
        </flag>
        <flag name="wxCAPTION">
            <description>Puts a caption on the frame. Notice that this flag is required by wxMINIMIZE_BOX, wxMAXIMIZE_BOX and wxCLOSE_BOX on most systems as the corresponding buttons cannot be shown if the window has no title bar at all. I.e. if wxCAPTION is not specified those styles would be simply ignored.</description>
        </flag>
        <flag name="wxMINIMIZE">
            <description>Identical to wxICONIZE. Windows only.</description>
        </flag>
        <flag name="wxMINIMIZE_BOX">
            <description>Displays a minimize box on the frame.</description>
        </flag>
        <flag name="wxMAXIMIZE">
            <description>Displays the frame maximized. Windows and GTK+ only.</description>
        </flag>
        <flag name="wxMAXIMIZE_BOX">
            <description>Displays a maximize box on the frame. Notice that under wxGTK wxRESIZE_BORDER must be used as well or this style is ignored.</description>
        </flag>
        <flag name="wxCLOSE_BOX">
            <description>Displays a close box on the frame.</description>
        </flag>
        <flag name="wxSTAY_ON_TOP">
            <description>Stay on top of all other windows, see also wxFRAME_FLOAT_ON_PARENT.</description>
        </flag>
        <flag name="wxSYSTEM_MENU">
            <description>Displays a system menu containing the list of various windows commands in the window title bar. Unlike wxMINIMIZE_BOX, wxMAXIMIZE_BOX and wxCLOSE_BOX styles this style can be used without wxCAPTION, at least under Windows, and makes the system menu available without showing it on screen in this case. However it is recommended to only use it together with wxCAPTION for consistent behaviour under all platforms.</description>
        </flag>
        <flag name="wxRESIZE_BORDER">
            <description>Displays a resizable border around the window.</description>
        </flag>
        <flag name="wxFRAME_TOOL_WINDOW">
            <description>Causes a frame with a small title bar to be created; the frame does not appear in the taskbar under Windows or GTK+.</description>
        </flag>
        <flag name="wxFRAME_NO_TASKBAR">
            <description>Creates an otherwise normal frame but it does not appear in the taskbar under Windows or GTK+ (note that it will minimize to the desktop window under Windows which may seem strange to the users and thus it might be better to use this style only without wxMINIMIZE_BOX style). In wxGTK, the flag is respected only if the window manager supports _NET_WM_STATE_SKIP_TASKBAR hint.</description>
        </flag>
        <flag name="wxFRAME_FLOAT_ON_PARENT">
            <description>The frame will always be on top of its parent (unlike wxSTAY_ON_TOP). A frame created with this style must have a non-NULL parent.</description>
        </flag>
        <flag name="wxFRAME_SHAPED">
            <description>Windows with this style are allowed to have their shape changed with the SetShape() method.</description>
        </flag>
    </style>
    <style name="exstyle" label="Extra style">
        <flag name="wxFRAME_EX_CONTEXTHELP">
            <description>Under Windows, puts a query button on the caption. When pressed, Windows will go into a context-sensitive help mode and wxWidgets will send a wxEVT_HELP event if the user clicked on an application window. Note that this is an extended style and must be set by calling SetExtraStyle before Create is called (two-step construction). You cannot use this style together with wxMAXIMIZE_BOX or wxMINIMIZE_BOX, so you should use wxDEFAULT_FRAME_STYLE ~ (wxMINIMIZE_BOX | wxMAXIMIZE_BOX) for the frames having this style (the dialogs don't have a minimize or a maximize box by default)</description>
        </flag>
        <flag name="wxFRAME_EX_METAL">
            <description>On Mac OS X, frames with this style will be shown with a metallic look. This is an extra style.</description>
        </flag>
    </style>
    <event name="wxCloseEvent">
        <description>This event class contains information about window and session close events.</description>
        <type name="wxEVT_CLOSE">
            <macro>EVT_CLOSE</macro>
            <description>The frame is being closed by the user or programmatically (see wxWindow::Close). The user may generate this event clicking the close button (typically the 'X' on the top-right of the title bar) if it's present (see the wxCLOSE_BOX style).</description>
        </type>
    </event>
    <event name="wxIconizeEvent">
        <description>&lt;p&gt;An event being sent when the frame is iconized (minimized) or restored.&lt;/p&gt;&lt;p&gt;Currently only wxMSW and wxGTK generate such events.&lt;/p&gt;</description>
        <type name="wxEVT_ICONIZE">
            <macro>EVT_ICONIZE</macro>
            <description>Process a wxEVT_ICONIZE event.</description>
        </type>
    </event>
    <event name="wxMenuEvent">
        <description>
            &lt;p&gt;This class is used for a variety of menu-related events.&lt;/p&gt;
            &lt;p&gt;Note that these do not include menu command events, which are handled using
            &lt;a href="http://docs.wxwidgets.org/trunk/classwx_command_event.html"&gt;wxCommandEvent&lt;/a&gt; objects.&lt;/p&gt;
            &lt;p&gt;The default handler for wxEVT_MENU_HIGHLIGHT displays help text in the first field of the status bar.&lt;/p&gt;
        </description>
        <type name="wxEVT_MENU_OPEN">
            <macro>EVT_MENU_OPEN</macro>
            <description>A menu is about to be opened.</description>
        </type>
        <type name="wxEVT_MENU_CLOSE">
            <macro>EVT_MENU_CLOSE</macro>
            <description>A menu has been just closed.</description>
        </type>
        <type name="wxEVT_MENU_HIGHLIGHT">
            <macro>EVT_MENU_HIGHLIGHT</macro>
            <description>The menu item with the specified id has been highlighted: used to show help prompts in the status bar by wxFrame.</description>
        </type>
    </event>
</class>